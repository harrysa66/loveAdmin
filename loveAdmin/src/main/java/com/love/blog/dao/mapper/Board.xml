<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="Board" >
  <sql id="sqlList" >
    o.id,o.content, o.visitor_id,o.reply_content, o.user_id, o.create_time, o.reply_time, o.`status`, o.isValid
  </sql>
  <insert id="insert" parameterType="board" >
    insert into love_blog_board (id, visitor_id, user_id, 
      create_time, reply_time, `status`, 
      isValid, content, reply_content
      )
    values (#{id,jdbcType=VARCHAR}, #{visitorId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{replyTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{isvalid,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}, #{replyContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  
  <update id="update" parameterType="board" >
    update love_blog_board
    <set >
      <if test="visitorId != null" >
        visitor_id = #{visitorId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyTime != null" >
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null" >
        isValid = #{isvalid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="replyContent != null" >
        reply_content = #{replyContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 分页查询 -->
	<select id="queryPage" parameterType="map" resultType="board">
		select distinct <include refid="sqlList" /> ,v.ip as ip,u.nickname as nickname
		FROM love_blog_board o 
		left join love_blog_visitor v on o.visitor_id=v.id
		left join love_system_user u on o.user_id=u.id
		WHERE o.STATUS !='DELETED'
		 	<if test="visitorId !=null and visitorId != ''"> 
              and  o.visitor_id = #{visitorId}
            </if>
            <if test="userId !=null and userId != ''"> 
              and  o.user_id = #{userId}
            </if>
            <if test="isvalid !=null and isvalid != ''"> 
              and  o.isvalid = #{isvalid}
            </if>
            order by o.create_time desc
	</select>
	
	<!-- 统计分页查询的数据条数 -->
	<select id="queryPageCount" parameterType="map" resultType="int">
		select count(distinct o.id)
		FROM love_blog_board o 
		left join love_blog_visitor v on o.visitor_id=v.id
		left join love_system_user u on o.user_id=u.id
		WHERE o.STATUS !='DELETED'
            <if test="visitorId !=null and visitorId != ''"> 
              and  o.visitor_id = #{visitorId}
            </if>
            <if test="userId !=null and userId != ''"> 
              and  o.user_id = #{userId}
            </if>
            <if test="isvalid !=null and isvalid != ''"> 
              and  o.isvalid = #{isvalid}
            </if>
	</select>
	
	<!-- 通过ID查找 -->
	<select id="selectById" parameterType="String" resultType="board">
		select <include refid="sqlList" />
		FROM love_blog_board o
		WHERE o.id=#{id}
	</select>
	
	<!-- 逻辑删除 -->
	<update id="deleteById" parameterType="map">
		update love_blog_board set STATUS=#{status} where ID=#{id}
	</update>
	
	<select id="findListByStatus" parameterType="map" resultType="board">
		select <include refid="sqlList" />
		FROM love_blog_board o
		WHERE o.status = #{status} and o.isvalid = #{isvalid}
	</select>
	
</mapper>